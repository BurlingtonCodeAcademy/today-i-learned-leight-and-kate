// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Using the App Renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
        >
          <h1>
            Today I Learned
          </h1>
          <Form
            author=""
            body=""
            buttonText="Post"
            entries={Array []}
            handleChange={[Function]}
            handleSubmit={[Function]}
            title=""
          />
        </header>,
        <div
          className="status"
        />,
        Array [],
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Today I Learned
            </h1>,
            <Form
              author=""
              body=""
              buttonText="Post"
              entries={Array []}
              handleChange={[Function]}
              handleSubmit={[Function]}
              title=""
            />,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Today I Learned",
            },
            "ref": null,
            "rendered": "Today I Learned",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "author": "",
              "body": "",
              "buttonText": "Post",
              "entries": Array [],
              "handleChange": [Function],
              "handleSubmit": [Function],
              "title": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "status",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
          >
            <h1>
              Today I Learned
            </h1>
            <Form
              author=""
              body=""
              buttonText="Post"
              entries={Array []}
              handleChange={[Function]}
              handleSubmit={[Function]}
              title=""
            />
          </header>,
          <div
            className="status"
          />,
          Array [],
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Today I Learned
              </h1>,
              <Form
                author=""
                body=""
                buttonText="Post"
                entries={Array []}
                handleChange={[Function]}
                handleSubmit={[Function]}
                title=""
              />,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Today I Learned",
              },
              "ref": null,
              "rendered": "Today I Learned",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "author": "",
                "body": "",
                "buttonText": "Post",
                "entries": Array [],
                "handleChange": [Function],
                "handleSubmit": [Function],
                "title": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "status",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
